[{"D:\\projects\\Contact-App-master\\client\\src\\index.js":"1","D:\\projects\\Contact-App-master\\client\\src\\App.js":"2","D:\\projects\\Contact-App-master\\client\\src\\utils\\setAuthToken.js":"3","D:\\projects\\Contact-App-master\\client\\src\\context\\contact\\ConstactState.js":"4","D:\\projects\\Contact-App-master\\client\\src\\context\\alert\\AlertState.js":"5","D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Alerts.js":"6","D:\\projects\\Contact-App-master\\client\\src\\context\\auth\\AuthState.js":"7","D:\\projects\\Contact-App-master\\client\\src\\components\\pages\\About.js":"8","D:\\projects\\Contact-App-master\\client\\src\\components\\auth\\Register.js":"9","D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Navbar.js":"10","D:\\projects\\Contact-App-master\\client\\src\\components\\routing\\PrivateRoute.js":"11","D:\\projects\\Contact-App-master\\client\\src\\components\\pages\\Home.js":"12","D:\\projects\\Contact-App-master\\client\\src\\components\\auth\\Login.js":"13","D:\\projects\\Contact-App-master\\client\\src\\context\\alert\\alertContext.js":"14","D:\\projects\\Contact-App-master\\client\\src\\context\\contact\\contactContext.js":"15","D:\\projects\\Contact-App-master\\client\\src\\context\\alert\\alertReducer.js":"16","D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Modal.js":"17","D:\\projects\\Contact-App-master\\client\\src\\context\\contact\\contactReducer.js":"18","D:\\projects\\Contact-App-master\\client\\src\\context\\types.js":"19","D:\\projects\\Contact-App-master\\client\\src\\context\\auth\\authContext.js":"20","D:\\projects\\Contact-App-master\\client\\src\\context\\auth\\authReducer.js":"21","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\ContactForm.js":"22","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\Contacts.js":"23","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\ContactFilter.js":"24","D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Spinner.js":"25","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\ContactItem.js":"26"},{"size":197,"mtime":1722425313012,"results":"27","hashOfConfig":"28"},{"size":1484,"mtime":1722425312922,"results":"29","hashOfConfig":"28"},{"size":400,"mtime":1722425315412,"results":"30","hashOfConfig":"28"},{"size":4060,"mtime":1722425314161,"results":"31","hashOfConfig":"28"},{"size":811,"mtime":1722425313861,"results":"32","hashOfConfig":"28"},{"size":936,"mtime":1722425313422,"results":"33","hashOfConfig":"28"},{"size":2793,"mtime":1722425314021,"results":"34","hashOfConfig":"28"},{"size":384,"mtime":1722425313656,"results":"35","hashOfConfig":"28"},{"size":3693,"mtime":1722425313121,"results":"36","hashOfConfig":"28"},{"size":2983,"mtime":1722513274642,"results":"37","hashOfConfig":"28"},{"size":579,"mtime":1722425313762,"results":"38","hashOfConfig":"28"},{"size":1210,"mtime":1722425313702,"results":"39","hashOfConfig":"28"},{"size":2662,"mtime":1722425313062,"results":"40","hashOfConfig":"28"},{"size":108,"mtime":1722425313916,"results":"41","hashOfConfig":"28"},{"size":112,"mtime":1722425314211,"results":"42","hashOfConfig":"28"},{"size":305,"mtime":1722425313962,"results":"43","hashOfConfig":"28"},{"size":454,"mtime":1722425313462,"results":"44","hashOfConfig":"28"},{"size":2087,"mtime":1722425314262,"results":"45","hashOfConfig":"28"},{"size":882,"mtime":1722425313811,"results":"46","hashOfConfig":"28"},{"size":106,"mtime":1722425314062,"results":"47","hashOfConfig":"28"},{"size":1168,"mtime":1722425314111,"results":"48","hashOfConfig":"28"},{"size":3083,"mtime":1722425313261,"results":"49","hashOfConfig":"28"},{"size":1585,"mtime":1722425313361,"results":"50","hashOfConfig":"28"},{"size":862,"mtime":1722425313181,"results":"51","hashOfConfig":"28"},{"size":284,"mtime":1722425313561,"results":"52","hashOfConfig":"28"},{"size":1591,"mtime":1722425313312,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"179cbas",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\Contact-App-master\\client\\src\\index.js",[],["117","118"],"D:\\projects\\Contact-App-master\\client\\src\\App.js",[],"D:\\projects\\Contact-App-master\\client\\src\\utils\\setAuthToken.js",[],"D:\\projects\\Contact-App-master\\client\\src\\context\\contact\\ConstactState.js",["119","120","121","122"],"import React, { useReducer } from \"react\";\nimport axios from \"axios\";\n\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_ERRORS,\n  SET_ALERT,\n  REMOVE_ALERT,\n} from \"../types\";\n\nconst ConstactState = (props) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data,\n      });\n      //\n    } catch (error) {\n      // alert(\"STATE ERROR : \" + error);\n      console.error(error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg,\n      });\n    }\n  };\n\n  // Add Contact\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios\n        .post(\"/api/contacts\", contact, config)\n        .catch((err) => {\n          if (err.response.status == 400) {\n            console.log(err);\n            // if (err.response.data.errors) {\n            //   err.response.data.errors.map((e) => console.log(e.msg));\n            // }\n            throw err;\n          }\n        });\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data,\n      });\n      //\n    } catch (error) {\n      if (error.response.data.errors) {\n        error.response.data.errors.map((e) =>\n          dispatch({\n            type: CONTACT_ERROR,\n            payload: e.msg,\n          })\n        );\n      } else {\n        dispatch({\n          type: CONTACT_ERROR,\n          payload: error.response.data.msg,\n        });\n      }\n    }\n  };\n\n  // Update Contact\n  const updateContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios\n        .put(`api/contacts/${contact._id}`, contact, config)\n        .catch((err) => {\n          if (err.response.status == 400) {\n            throw err;\n          }\n        });\n\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data.msg,\n      });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg,\n      });\n    }\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set Current Contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  // Clear Error\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        getContacts,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        clearContacts,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ConstactState;\n","D:\\projects\\Contact-App-master\\client\\src\\context\\alert\\AlertState.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Alerts.js",["123","124","125"],"import React, { useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport Modal from \"./Modal\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nconst customId = \"custom-id-yes\";\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    /* alertContext.alerts.length > 0 &&\n    alertContext.alerts.map((alert) => (\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\n        <i className=\"fas fa-info-circle\"></i> {alert.msg}\n      </div>\n    )) */\n    <>\n      {alertContext.alerts.length > 0 &&\n        alertContext.alerts.map((alert) => {\n          if (alert.type == \"danger\") {\n            toast.error(alert.msg, {\n              toastId: customId,\n              position: \"bottom-right\",\n            });\n          }\n        })}\n      <ToastContainer />\n    </>\n  );\n};\nexport default Alerts;\n","D:\\projects\\Contact-App-master\\client\\src\\context\\auth\\AuthState.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\pages\\About.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\auth\\Register.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Navbar.js",["126"],"import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// Context\nimport AuthContext from \"../../context/auth/authContext\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Navbar = ({ title, icon }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n\n  const contactContext = useContext(ContactContext);\n  const { clearContacts } = contactContext;\n\n  const onLogout = () => {\n    logout();\n    clearContacts();\n  };\n\n  const authLinks = (\n    <>\n      <li className=\"nav-item nav-link text-white\">\n        Hello {user && user.name}\n      </li>\n      <li className=\"nav-item\">\n        <a onClick={onLogout} href=\"#!\" className=\"nav-link text-white\">\n          <i className=\"fas fa-sign-out-alt\"></i>{\" \"}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </li>\n    </>\n  );\n\n  const guestLinks = (\n    <>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link text-white\" to=\"/register\">\n          Register\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link text-white\" to=\"/login\">\n          Login\n        </Link>\n      </li>\n    </>\n  );\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary text-white\">\n      <h4 className=\"my-auto\">\n        <i className={icon} /> {title}\n      </h4>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className=\"collapse navbar-collapse float-sm-right\"\n        id=\"navbarSupportedContent\"\n      >\n        <ul className=\"navbar-nav float-sm-right ml-auto my-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/about\">\n              About\n            </Link>\n          </li>\n          {isAuthenticated ? authLinks : guestLinks}\n          <li className=\"nav-item nav-link text-white d-none d-md-block\">|</li>\n          <li className=\"nav-item\">\n            <a\n              href=\"https://github.com/Codes/Contact-App\"\n              target=\"_blank\"\n              className=\"nav-link text-white\"\n            >\n              <i class=\"fab fa-github\"></i> GitHub{\" \"}\n              <i class=\"fas fa-external-link-alt\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nNavbar.prototypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"Contact App\",\n  icon: \"far fa-address-card\",\n};\n\nexport default Navbar;\n","D:\\projects\\Contact-App-master\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\pages\\Home.js",["127"],"import React, { useContext, useEffect } from \"react\";\n\n// Components\nimport Contacts from \"../contacts/Contacts\";\nimport ContactForm from \"../contacts/ContactForm\";\nimport ContactFilter from \"../contacts/ContactFilter\";\n\n// Context\nimport AuthContext from \"../../context/auth/authContext\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Home = () => {\n  const authContext = useContext(AuthContext);\n  const contactContext = useContext(ContactContext);\n  const alertContext = useContext(AlertContext);\n\n  const { error, clearErrors } = contactContext;\n\n  const { setAlert } = alertContext;\n\n  useEffect(() => {\n    authContext.loadUser();\n\n    if (error !== null && error) {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n  }, [error]);\n\n  return (\n    <div className=\"container\">\n      {/* <h1 className=\"text-dark\">Home</h1> */}\n      <div className=\"row\">\n        <div className=\"col-md-6 col-sm 12\">\n          <ContactForm />\n        </div>\n        <div className=\"col-md-6 col-sm 12\">\n          <ContactFilter />\n          <Contacts />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","D:\\projects\\Contact-App-master\\client\\src\\components\\auth\\Login.js",[],"D:\\projects\\Contact-App-master\\client\\src\\context\\alert\\alertContext.js",[],"D:\\projects\\Contact-App-master\\client\\src\\context\\contact\\contactContext.js",[],"D:\\projects\\Contact-App-master\\client\\src\\context\\alert\\alertReducer.js",["128"],"import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Modal.js",["129"],"import React, { useEffect } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nconst Modal = () => {\n  const onClick = () => {\n    toast.success(\"Hi\", {\n      autoClose: 3000,\n    });\n  };\n  return (\n    <>\n      {toast.success(\"Direct\", {\n        autoClose: 3000,\n      })}\n      <button onClick={onClick}>Click</button>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Modal;\n","D:\\projects\\Contact-App-master\\client\\src\\context\\contact\\contactReducer.js",["130","131","132"],"import {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  CLEAR_CONTACTS,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  SET_ALERT,\n  REMOVE_ALERT,\n  CONTACT_ERROR,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      // alert(\"HI\");\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false,\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) => {\n          return contact._id === action.payload._id ? action.payload : contact;\n        }),\n        loading: false,\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regexp = new RegExp(`${action.payload}`, \"gi\");\n          return (\n            contact.name.match(regexp) ||\n            contact.email.match(regexp) ||\n            contact.phone.match(regexp)\n          );\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n    case CONTACT_ERROR:\n      // alert(\"CONTACT ERROR\" + action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","D:\\projects\\Contact-App-master\\client\\src\\context\\types.js",[],"D:\\projects\\Contact-App-master\\client\\src\\context\\auth\\authContext.js",[],"D:\\projects\\Contact-App-master\\client\\src\\context\\auth\\authReducer.js",["133"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      // alert(\"USER_LOADED\");\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      // alert(`Token : ` + localStorage.getItem(\"token\"));\n      // console.log(action.payload);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      // alert(\"FAIL\");\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\ContactForm.js",["134"],"import React, { useState, useContext, useEffect } from \"react\";\n\n//Context\nimport contactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  const ContactContext = useContext(contactContext);\n  const { current, addContact, clearCurrent, updateContact } = ContactContext;\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\",\n  });\n\n  const { name, email, phone, type } = contact;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      clearFormFields();\n    }\n  }, [contactContext, current]);\n\n  const clearFormFields = () => {\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\",\n    });\n  };\n\n  const onChange = (e) => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (current === null) addContact(contact);\n    else updateContact(contact);\n\n    clearFormFields();\n    clearCurrent();\n  };\n\n  const clearAll = (e) => {\n    clearCurrent();\n  };\n\n  return (\n    <>\n      <div align=\"center\" className=\"my-3\">\n        <h3>{current === null ? \"Add\" : \"Edit\"} Contacts</h3>\n      </div>\n      <form className=\"my-2\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"phone\"\n            placeholder=\"Phone\"\n            value={phone}\n            onChange={onChange}\n            required\n          />\n        </div>\n        Contact Type:{\" \"}\n        <div className=\"form-group\">\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"personal\"\n            checked={type === \"personal\"}\n            onChange={onChange}\n          />{\" \"}\n          Personal{\" \"}\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"professional\"\n            checked={type === \"professional\"}\n            onChange={onChange}\n          />{\" \"}\n          Professional\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary btn-block\">\n            {current === null ? \"Add\" : \"Update\"} Contact\n          </button>\n        </div>\n        {current && (\n          <div className=\"form-group\">\n            <button className=\"btn btn-secondary btn-block\" onClick={clearAll}>\n              Reset\n            </button>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\Contacts.js",["135"],"import React, { useContext, useEffect } from \"react\";\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n// Component\nimport ContactItem from \"./ContactItem\";\nimport Spinner from \"../layout/Spinner\";\n\n// Context\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered, getContacts, loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h3>No contacts to display!</h3>;\n  }\n\n  return (\n    <>\n      {contacts !== null && !loading ? (\n        <>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <ContactItem key={contact._id} contact={contact} />\n              ))\n            : contacts.map((contact) => (\n                <ContactItem key={contact._id} contact={contact} />\n              ))}\n        </>\n      ) : (\n        <Spinner />\n      )}\n      {/* <TransitionGroup>\n        {filtered !== null\n          ? filtered.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))\n          : contacts.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))}\n      </TransitionGroup> */}\n    </>\n  );\n};\n\nexport default Contacts;\n","D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\ContactFilter.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\layout\\Spinner.js",[],"D:\\projects\\Contact-App-master\\client\\src\\components\\contacts\\ContactItem.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":18,"column":3,"nodeType":"142","messageId":"143","endLine":18,"endColumn":12},{"ruleId":"140","severity":1,"message":"144","line":19,"column":3,"nodeType":"142","messageId":"143","endLine":19,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":63,"column":35,"nodeType":"147","messageId":"148","endLine":63,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":105,"column":35,"nodeType":"147","messageId":"148","endLine":105,"endColumn":37},{"ruleId":"140","severity":1,"message":"149","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":22,"column":41,"nodeType":"152","messageId":"153","endLine":22,"endColumn":43},{"ruleId":"145","severity":1,"message":"146","line":23,"column":26,"nodeType":"147","messageId":"148","endLine":23,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":86,"column":15,"nodeType":"156","endLine":86,"endColumn":30},{"ruleId":"157","severity":1,"message":"158","line":29,"column":6,"nodeType":"159","endLine":29,"endColumn":13,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":3,"column":1,"nodeType":"163","endLine":12,"endColumn":3},{"ruleId":"140","severity":1,"message":"164","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":11,"column":3,"nodeType":"142","messageId":"143","endLine":11,"endColumn":12},{"ruleId":"140","severity":1,"message":"144","line":12,"column":3,"nodeType":"142","messageId":"143","endLine":12,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":17,"column":1,"nodeType":"163","endLine":97,"endColumn":3},{"ruleId":"161","severity":1,"message":"162","line":12,"column":1,"nodeType":"163","endLine":55,"endColumn":3},{"ruleId":"157","severity":1,"message":"165","line":25,"column":6,"nodeType":"159","endLine":25,"endColumn":31,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"167","line":18,"column":6,"nodeType":"159","endLine":18,"endColumn":8,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'SET_ALERT' is defined but never used.","Identifier","unusedVar","'REMOVE_ALERT' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Modal' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authContext', 'clearErrors', and 'setAlert'. Either include them or remove the dependency array.","ArrayExpression",["171"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'contactContext'. Either exclude it or remove the dependency array. Outer scope values like 'contactContext' aren't valid dependencies because mutating them doesn't re-render the component.",["172"],"React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [authContext, clearErrors, error, setAlert]",{"range":"180","text":"181"},"Update the dependencies array to be: [current]",{"range":"182","text":"183"},"Update the dependencies array to be: [getContacts]",{"range":"184","text":"185"},[827,834],"[authContext, clearErrors, error, setAlert]",[593,618],"[current]",[501,503],"[getContacts]"]